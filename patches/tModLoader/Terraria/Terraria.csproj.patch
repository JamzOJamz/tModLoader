--- src/TerrariaNetCore/Terraria/Terraria.csproj
+++ src/tModLoader/Terraria/Terraria.csproj
@@ -7,26 +_,27 @@
     <Company>Re-Logic</Company>
     <Copyright>Copyright Â© 2022 Re-Logic</Copyright>
     <RootNamespace>Terraria</RootNamespace>
-    <AssemblyName>Terraria</AssemblyName>
+    <AssemblyName>tModLoader</AssemblyName>
+    <GenerateDocumentationFile>true</GenerateDocumentationFile>
+    <UseAppHost>false</UseAppHost>
     <GenerateRuntimeConfigDevFile>true</GenerateRuntimeConfigDevFile>
   </PropertyGroup>
-  <PropertyGroup Condition="$(Configuration.Contains('Server'))">
-    <AssemblyName>$(AssemblyName)Server</AssemblyName>
-  </PropertyGroup>
-  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
-    <AssemblyName>$(AssemblyName)Debug</AssemblyName>
-  </PropertyGroup>
-  <!-- Avoid overwriting Terraria(Server).exe (if it's not Debug it's release) -->
-  <PropertyGroup Condition="!$(Configuration.Contains('Debug'))">
-    <AssemblyName>$(AssemblyName)Release</AssemblyName>
+  <PropertyGroup>
+    <tMLVersion Condition="'$(TmlVersion)' == ''">9999.0</tMLVersion>
+    <BuildPurpose Condition="'$(BuildPurpose)' == ''">dev</BuildPurpose>
+    <BranchName Condition="'$(BranchName)' == ''">unknown</BranchName>
+    <BranchName>$(BranchName.Replace("|","-"))</BranchName>
+    <CommitSHA Condition="'$(CommitSHA)' == ''">unknown</CommitSHA>
+    <BuildDate>$([System.DateTime]::UtcNow.ToBinary())</BuildDate>
+    <SourceRevisionId>$(tMLVersion)|$(BranchName)|$(BuildPurpose)|$(CommitSHA)|$(BuildDate)</SourceRevisionId>
   </PropertyGroup>
   <PropertyGroup>
     <OutputName>$(AssemblyName)</OutputName>
-    <ApplicationIcon>Icon.ico</ApplicationIcon>
+    <ApplicationIcon>tModLoader.ico</ApplicationIcon>
   </PropertyGroup>
   <ItemGroup>
     <Reference Include="CsvHelper" />
-    <Reference Include="Ionic.Zip.CF" />
+    <Reference Include="Ionic.Zip.Reduced" />
     <ProjectReference Include="../../../FNA/FNA.Core.csproj" />
     <Reference Include="MP3Sharp" />
     <Reference Include="Newtonsoft.Json" />
@@ -34,8 +_,20 @@
     <Reference Include="RailSDK.Net" />
     <ProjectReference Include="../ReLogic/ReLogic.csproj" />
     <Reference Include="SteelSeriesEngineWrapper" />
+    <Reference Include="log4net" />
+    <Reference Include="TerrariaHooks" />
+    <ProjectReference Include="../../../tModPorter/tModPorter/tModPorter.csproj" />
+	<!-- <Temporary> - waiting on https://github.com/MonoMod/MonoMod/pull/108 to be merged & pushed to nuget -->
+    <Reference Include="MonoMod.Backports" />
+    <Reference Include="MonoMod.Core" />
+    <Reference Include="MonoMod.ILHelpers" />
+    <Reference Include="MonoMod.RuntimeDetour" />
+    <Reference Include="MonoMod.Utils" />
+	<PackageReference Include="Mono.Cecil" Version="0.11.4" />
+	<!-- </Temporary> -->
+    <ProjectReference Include="../../../BuildTools/tModLoader.BuildTools.csproj" />
   </ItemGroup>
   <ItemGroup>
+    <EmbeddedResource Include="**\*.png" />
     <EmbeddedResource Include="GameContent/Creative/Content/*" />
     <EmbeddedResource Include="GameContent/Metadata/MaterialData/*" />
     <EmbeddedResource Include="GameContent/WorldBuilding/*" />
@@ -46,18 +_,30 @@
   <ItemGroup>
     <Compile Remove="Social/WeGame/AsyncTaskHelper.cs" />
     <Compile Remove="Social/WeGame/CurrentThreadRunner.cs" />
-    <None Remove="Libraries/Mono/**" />
+    <Compile Remove="Libraries/Common/TerrariaHooks.dll" />
     <None Remove="Libraries/Windows/**" />
     <None Remove="Libraries/XNA/**" />
     <Content Include="Libraries/Native/**" CopyToOutputDirectory="PreserveNewest" />
+    <Content Include="release_extras/**" CopyToOutputDirectory="PreserveNewest" Link="%(RecursiveDir)%(Filename)%(Extension)" />
   </ItemGroup>
   <ItemGroup>
+    <PackageReference Include="Basic.Reference.Assemblies.Net60" Version="1.2.4" />
+	<!-- <PackageReference Include="MonoModReorg.RuntimeDetour" Version="22.9.29-prerelease" /> -->
+    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="4.2.0" />
+    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.2.0" />
+    <PackageReference Include="Microsoft.Win32.Registry" Version="6.0.0-preview.5.21301.5 " />
     <PackageReference Include="Steamworks.NET" Version="20.1.0" />
+    <PackageReference Include="System.CodeDom" Version="6.0.0" />
+    <PackageReference Include="System.Diagnostics.PerformanceCounter" Version="6.0.0" />
+    <PackageReference Include="Hjson" Version="3.0.0" />
+    <PackageReference Include="System.Reflection.MetadataLoadContext" Version="6.0.0" />
   </ItemGroup>
   <PropertyGroup>
-    <_ActualOutputDirectory>$(TerrariaSteamPath)</_ActualOutputDirectory>
+    <_ActualOutputDirectory>$(tModLoaderSteamPath)</_ActualOutputDirectory>
   </PropertyGroup>
   <Target Name="CopyToSteamDir" AfterTargets="Build">
+	<Delete Files="$(TargetDir)\tModPorter.runtimeconfig.json" />
+	<Delete Files="$(TargetDir)\tModPorter.deps.json" />
     <!-- copy files systematically to output folder -->
     <ItemGroup>
       <BinFiles Include="$(TargetDir)**" />
@@ -66,6 +_,11 @@
     <Exec Command="robocopy &quot;$(TargetDir)Libraries&quot; &quot;$(_ActualOutputDirectory)\Libraries&quot; /MIR" ContinueOnError="true" StandardOutputImportance="low" Condition="'$(OS)' == 'Windows_NT'">
       <Output TaskParameter="ExitCode" PropertyName="PurgeExitCode" />
     </Exec>
+    
+    <!-- Copy the ImageSharp library from the build output to the BuildTools library folder in tModLoader/Libraries -->
+    <!-- Needed for the BuildTools to be able to convert images to .rawimg that can be packed into the .tmod file -->
+    <Copy SourceFiles="$(TargetDir)Libraries/sixlabors.imagesharp/1.0.3/lib/netcoreapp3.1/SixLabors.ImageSharp.dll" DestinationFolder="$(_ActualOutputDirectory)/Libraries/tModLoader.BuildTools/1.0.0/" SkipUnchangedFiles="True" />
+    
     <Warning Text="\Libraries file purge failed (robocopy /MIR Exit Code: $(PurgeExitCode)). Old files may not be removed." Condition="'$(PurgeExitCode)' != 2 AND '$(PurgeExitCode)' != 0" />
   </Target>
   <!--See first answer in https://stackoverflow.com/questions/55946010/how-to-specify-output-folder-for-the-referenced-nuget-packages for how this was created-->
